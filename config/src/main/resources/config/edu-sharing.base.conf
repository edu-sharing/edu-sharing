// DO NOT EDIT THIS FILE
// this is the base config file
// make any custom modifications to the file "edu-sharing.conf"

// basic repository features
repository: {
    multilang: false // multilang support, this is a legacy variable and only "false" is supported
    // permission mapping from remote lms systems-
    lmsCodes: "moodle,moodle/course:delete,moodle/course:update;fronter,fronter/course:delete,fronter/course:update;opal,opal/course:delete,opal/course:update"
    // deliver repository metadata with url: http://host:8080/edu-sharing/metadata
    exportMetadata: true
    //database related options
    database:{
        // scripts to run on startup (e.g. for updating tables)
        // will be run in the order of the array
        scripts:{
            // core scripts, please DO NOT override or change them
            core:["tracking.sql.properties",
                    "tracking.u1.sql.properties",
                    "tracking.u2.sql.properties",
                    "tracking.u3.sql.properties",
                    "tracking.u4.sql.properties"],
            custom:[] // any custom scripts (this can be safely overriden)
        }
    }
    // statistics endpoints (for providing public information about content counts, user counts, etc.)
    statistics:{
        api:{
            enabled:false
        }
    }
    // allow and control how the system communicates with other systems
    communication:{
        resolveUrlInformation:true // allows the repository to fetch metadata from a url ressource (when saving a link)
    }
    // configure tracking related functions
    tracking:{
        userMode: "session" // the mode to track users, either "obfuscate", "session", "none" or "full"
    }
    // the default required status for users to login. If not set, any status will be accepted
    personActiveStatus: null
    // personActiveStatus: "active"

    // privacy related configurations
    privacy: {
       // if true, e-mail all e-mail addresses inside vcards will be filtered if the user has no write permissions on the item
       // affects any api output like REST or OAI
       filterVCardEmail: false
       // if true, all e-mail addresses of creators/modifiers will be filtered if the user has no write permissions on the item
       filterMetadataEmail: false
    }

    // proxy to use for http requests (e.g. querying import data)
    proxy: {
        //host:127.0.0.1
        //proxyhost:proxyhost
        //proxyport:3128
        //proxyuser
        //proxypass
        //nonproxyhosts
    }
    // configuration of the DOI handleservice
    handleservice: {
        // is the handleservice active?
        enabled: false
        prefix: null
        // path of the private key file
        privkey: null
        repoid: null
        email: null
    }

}
// config for copy-based publishing of nodes
publish{
    // the node if of the parent node where published nodes get stored
    node: null
    // the pattern of the node structure (must be using date pattern data)
    nodePattern: "yyyy/MM/dd"
    // the authorityName of the new owner of published nodes
    owner: null
}
// supported connectors (like tinyMCE, OnlyOffice, ...)
connectorList:{
    connectors:[
        {
            id:"TINYMCE", icon:"edit", showNew: true, onlyDesktop: false, hasViewMode: true,
            filetypes:[
                {mimetype: "text/html",filetype: "html",createable: true,editable: true,editorType: "tinymce"}
            ]
        }
    ]
}

// config for available elasticsearch instances (Stream, Frontpage Cache)
elasticsearch:{
    servers: ["127.0.0.1:9200"]
}
// oai importer config
importer:{
    // threading config
    threads:{
        min:1, // min threads to use (>= 1)
        max:6, // max threads to use
        minSpare:1 // min amount of threads to keep free (so threads=min(threads.max,cpuCount-threads.minSpare))
    }
}

exporter:{
    oai:{
        identify:{
            name: null // repo name, if null, the local app caption will be used
            description: "<oai-identifier><scheme>oai</scheme></oai-identifier>" // a repo description
            delete: "no" // no, persistent or transient
            granularity: "Second" // timestamp granularity, Second or Day
            earliestDate: "1900-01-01T00:00:00Z" // earliest datestamp found in repository
        }
        identiferPrefix: "" // each identifier will be prefixed with this string, possible value e.g. "oai:your.domain:"
        itemsPerPage: 300,
        metadataPrefix: "lom" // name of the metadata prefix delivered by oai
        sets: ["default"] // your provided sets. Each specialized set must be defined as an mds query like "oai_<setname>"
        lom:{
            class:org.edu_sharing.repository.server.exporter.OAILOMExporter
        }
    }
}


// class to use for the stream service (default StreamServiceNone)
stream: {
    class:StreamServiceNone
    relevancy: {
        property: "ccm:taxonid"
        depth: 1
        actionLimit: 10
    }
}

// config for scheduled jobs
// to override and add custom jobs, we recommend using "jobs.entries += {...}"
jobs: {
    entries: [
        {
            name: "Built up Cache Job"
            class: "org.edu_sharing.repository.server.jobs.quartz.RefreshCacheJob"
            trigger: "Immediate" // fire at startup
        }
    ]
}