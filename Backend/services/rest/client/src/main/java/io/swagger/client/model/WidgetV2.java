/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Condition;
import io.swagger.client.model.Subwidget;
import io.swagger.client.model.ValueV2;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * WidgetV2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class WidgetV2 {
  @SerializedName("subwidgets")
  private List<Subwidget> subwidgets = null;

  @SerializedName("condition")
  private Condition condition = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("caption")
  private String caption = null;

  @SerializedName("bottomCaption")
  private String bottomCaption = null;

  @SerializedName("icon")
  private String icon = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("template")
  private String template = null;

  @SerializedName("values")
  private List<ValueV2> values = null;

  @SerializedName("placeholder")
  private String placeholder = null;

  @SerializedName("unit")
  private String unit = null;

  @SerializedName("min")
  private Integer min = null;

  @SerializedName("max")
  private Integer max = null;

  @SerializedName("defaultMin")
  private Integer defaultMin = null;

  @SerializedName("defaultMax")
  private Integer defaultMax = null;

  @SerializedName("step")
  private Integer step = null;

  @SerializedName("allowempty")
  private Boolean allowempty = false;

  @SerializedName("defaultvalue")
  private String defaultvalue = null;

  @SerializedName("isRequired")
  private Boolean isRequired = false;

  @SerializedName("isExtended")
  private Boolean isExtended = false;

  @SerializedName("isSearchable")
  private Boolean isSearchable = false;

  public WidgetV2 subwidgets(List<Subwidget> subwidgets) {
    this.subwidgets = subwidgets;
    return this;
  }

  public WidgetV2 addSubwidgetsItem(Subwidget subwidgetsItem) {
    if (this.subwidgets == null) {
      this.subwidgets = new ArrayList<Subwidget>();
    }
    this.subwidgets.add(subwidgetsItem);
    return this;
  }

   /**
   * Get subwidgets
   * @return subwidgets
  **/
  @ApiModelProperty(value = "")
  public List<Subwidget> getSubwidgets() {
    return subwidgets;
  }

  public void setSubwidgets(List<Subwidget> subwidgets) {
    this.subwidgets = subwidgets;
  }

  public WidgetV2 condition(Condition condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @ApiModelProperty(value = "")
  public Condition getCondition() {
    return condition;
  }

  public void setCondition(Condition condition) {
    this.condition = condition;
  }

  public WidgetV2 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public WidgetV2 caption(String caption) {
    this.caption = caption;
    return this;
  }

   /**
   * Get caption
   * @return caption
  **/
  @ApiModelProperty(value = "")
  public String getCaption() {
    return caption;
  }

  public void setCaption(String caption) {
    this.caption = caption;
  }

  public WidgetV2 bottomCaption(String bottomCaption) {
    this.bottomCaption = bottomCaption;
    return this;
  }

   /**
   * Get bottomCaption
   * @return bottomCaption
  **/
  @ApiModelProperty(value = "")
  public String getBottomCaption() {
    return bottomCaption;
  }

  public void setBottomCaption(String bottomCaption) {
    this.bottomCaption = bottomCaption;
  }

  public WidgetV2 icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @ApiModelProperty(value = "")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public WidgetV2 type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public WidgetV2 template(String template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @ApiModelProperty(value = "")
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }

  public WidgetV2 values(List<ValueV2> values) {
    this.values = values;
    return this;
  }

  public WidgetV2 addValuesItem(ValueV2 valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<ValueV2>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Get values
   * @return values
  **/
  @ApiModelProperty(value = "")
  public List<ValueV2> getValues() {
    return values;
  }

  public void setValues(List<ValueV2> values) {
    this.values = values;
  }

  public WidgetV2 placeholder(String placeholder) {
    this.placeholder = placeholder;
    return this;
  }

   /**
   * Get placeholder
   * @return placeholder
  **/
  @ApiModelProperty(value = "")
  public String getPlaceholder() {
    return placeholder;
  }

  public void setPlaceholder(String placeholder) {
    this.placeholder = placeholder;
  }

  public WidgetV2 unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @ApiModelProperty(value = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public WidgetV2 min(Integer min) {
    this.min = min;
    return this;
  }

   /**
   * Get min
   * @return min
  **/
  @ApiModelProperty(value = "")
  public Integer getMin() {
    return min;
  }

  public void setMin(Integer min) {
    this.min = min;
  }

  public WidgetV2 max(Integer max) {
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @ApiModelProperty(value = "")
  public Integer getMax() {
    return max;
  }

  public void setMax(Integer max) {
    this.max = max;
  }

  public WidgetV2 defaultMin(Integer defaultMin) {
    this.defaultMin = defaultMin;
    return this;
  }

   /**
   * Get defaultMin
   * @return defaultMin
  **/
  @ApiModelProperty(value = "")
  public Integer getDefaultMin() {
    return defaultMin;
  }

  public void setDefaultMin(Integer defaultMin) {
    this.defaultMin = defaultMin;
  }

  public WidgetV2 defaultMax(Integer defaultMax) {
    this.defaultMax = defaultMax;
    return this;
  }

   /**
   * Get defaultMax
   * @return defaultMax
  **/
  @ApiModelProperty(value = "")
  public Integer getDefaultMax() {
    return defaultMax;
  }

  public void setDefaultMax(Integer defaultMax) {
    this.defaultMax = defaultMax;
  }

  public WidgetV2 step(Integer step) {
    this.step = step;
    return this;
  }

   /**
   * Get step
   * @return step
  **/
  @ApiModelProperty(value = "")
  public Integer getStep() {
    return step;
  }

  public void setStep(Integer step) {
    this.step = step;
  }

  public WidgetV2 allowempty(Boolean allowempty) {
    this.allowempty = allowempty;
    return this;
  }

   /**
   * Get allowempty
   * @return allowempty
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowempty() {
    return allowempty;
  }

  public void setAllowempty(Boolean allowempty) {
    this.allowempty = allowempty;
  }

  public WidgetV2 defaultvalue(String defaultvalue) {
    this.defaultvalue = defaultvalue;
    return this;
  }

   /**
   * Get defaultvalue
   * @return defaultvalue
  **/
  @ApiModelProperty(value = "")
  public String getDefaultvalue() {
    return defaultvalue;
  }

  public void setDefaultvalue(String defaultvalue) {
    this.defaultvalue = defaultvalue;
  }

  public WidgetV2 isRequired(Boolean isRequired) {
    this.isRequired = isRequired;
    return this;
  }

   /**
   * Get isRequired
   * @return isRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsRequired() {
    return isRequired;
  }

  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }

  public WidgetV2 isExtended(Boolean isExtended) {
    this.isExtended = isExtended;
    return this;
  }

   /**
   * Get isExtended
   * @return isExtended
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsExtended() {
    return isExtended;
  }

  public void setIsExtended(Boolean isExtended) {
    this.isExtended = isExtended;
  }

  public WidgetV2 isSearchable(Boolean isSearchable) {
    this.isSearchable = isSearchable;
    return this;
  }

   /**
   * Get isSearchable
   * @return isSearchable
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSearchable() {
    return isSearchable;
  }

  public void setIsSearchable(Boolean isSearchable) {
    this.isSearchable = isSearchable;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WidgetV2 widgetV2 = (WidgetV2) o;
    return Objects.equals(this.subwidgets, widgetV2.subwidgets) &&
        Objects.equals(this.condition, widgetV2.condition) &&
        Objects.equals(this.id, widgetV2.id) &&
        Objects.equals(this.caption, widgetV2.caption) &&
        Objects.equals(this.bottomCaption, widgetV2.bottomCaption) &&
        Objects.equals(this.icon, widgetV2.icon) &&
        Objects.equals(this.type, widgetV2.type) &&
        Objects.equals(this.template, widgetV2.template) &&
        Objects.equals(this.values, widgetV2.values) &&
        Objects.equals(this.placeholder, widgetV2.placeholder) &&
        Objects.equals(this.unit, widgetV2.unit) &&
        Objects.equals(this.min, widgetV2.min) &&
        Objects.equals(this.max, widgetV2.max) &&
        Objects.equals(this.defaultMin, widgetV2.defaultMin) &&
        Objects.equals(this.defaultMax, widgetV2.defaultMax) &&
        Objects.equals(this.step, widgetV2.step) &&
        Objects.equals(this.allowempty, widgetV2.allowempty) &&
        Objects.equals(this.defaultvalue, widgetV2.defaultvalue) &&
        Objects.equals(this.isRequired, widgetV2.isRequired) &&
        Objects.equals(this.isExtended, widgetV2.isExtended) &&
        Objects.equals(this.isSearchable, widgetV2.isSearchable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subwidgets, condition, id, caption, bottomCaption, icon, type, template, values, placeholder, unit, min, max, defaultMin, defaultMax, step, allowempty, defaultvalue, isRequired, isExtended, isSearchable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WidgetV2 {\n");
    
    sb.append("    subwidgets: ").append(toIndentedString(subwidgets)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    caption: ").append(toIndentedString(caption)).append("\n");
    sb.append("    bottomCaption: ").append(toIndentedString(bottomCaption)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    placeholder: ").append(toIndentedString(placeholder)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    defaultMin: ").append(toIndentedString(defaultMin)).append("\n");
    sb.append("    defaultMax: ").append(toIndentedString(defaultMax)).append("\n");
    sb.append("    step: ").append(toIndentedString(step)).append("\n");
    sb.append("    allowempty: ").append(toIndentedString(allowempty)).append("\n");
    sb.append("    defaultvalue: ").append(toIndentedString(defaultvalue)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    isExtended: ").append(toIndentedString(isExtended)).append("\n");
    sb.append("    isSearchable: ").append(toIndentedString(isSearchable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

