/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Admin;
import io.swagger.client.model.AvailableMds;
import io.swagger.client.model.Banner;
import io.swagger.client.model.Collections;
import io.swagger.client.model.ContextMenuEntry;
import io.swagger.client.model.Guest;
import io.swagger.client.model.HelpMenuOptions;
import io.swagger.client.model.Image;
import io.swagger.client.model.License;
import io.swagger.client.model.LicenseAgreement;
import io.swagger.client.model.LogoutInfo;
import io.swagger.client.model.Mainnav;
import io.swagger.client.model.MenuEntry;
import io.swagger.client.model.Register;
import io.swagger.client.model.Rendering;
import io.swagger.client.model.Services;
import io.swagger.client.model.SessionExpiredDialog;
import io.swagger.client.model.Stream;
import io.swagger.client.model.Workflow;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Values
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class Values {
  @SerializedName("supportedLanguages")
  private List<String> supportedLanguages = null;

  @SerializedName("extension")
  private String extension = null;

  @SerializedName("loginUrl")
  private String loginUrl = null;

  @SerializedName("loginAllowLocal")
  private Boolean loginAllowLocal = false;

  @SerializedName("loginProvidersUrl")
  private String loginProvidersUrl = null;

  @SerializedName("loginProviderTargetUrl")
  private String loginProviderTargetUrl = null;

  @SerializedName("register")
  private Register register = null;

  @SerializedName("recoverPasswordUrl")
  private String recoverPasswordUrl = null;

  @SerializedName("imprintUrl")
  private String imprintUrl = null;

  @SerializedName("privacyInformationUrl")
  private String privacyInformationUrl = null;

  @SerializedName("helpUrl")
  private String helpUrl = null;

  @SerializedName("whatsNewUrl")
  private String whatsNewUrl = null;

  @SerializedName("editProfileUrl")
  private String editProfileUrl = null;

  @SerializedName("editProfile")
  private Boolean editProfile = false;

  @SerializedName("workspaceColumns")
  private List<String> workspaceColumns = null;

  @SerializedName("hideMainMenu")
  private List<String> hideMainMenu = null;

  @SerializedName("logout")
  private LogoutInfo logout = null;

  @SerializedName("menuEntries")
  private List<MenuEntry> menuEntries = null;

  @SerializedName("nodeOptions")
  private List<ContextMenuEntry> nodeOptions = null;

  @SerializedName("searchNodeOptions")
  private List<ContextMenuEntry> searchNodeOptions = null;

  @SerializedName("renderNodeOptions")
  private List<ContextMenuEntry> renderNodeOptions = null;

  @SerializedName("collectionNodeOptions")
  private List<ContextMenuEntry> collectionNodeOptions = null;

  @SerializedName("nodeStoreOptions")
  private List<ContextMenuEntry> nodeStoreOptions = null;

  @SerializedName("allowedLicenses")
  private List<String> allowedLicenses = null;

  @SerializedName("customLicenses")
  private List<License> customLicenses = null;

  @SerializedName("workflows")
  private List<Workflow> workflows = null;

  @SerializedName("licenseDialogOnUpload")
  private Boolean licenseDialogOnUpload = false;

  @SerializedName("nodeReport")
  private Boolean nodeReport = false;

  @SerializedName("branding")
  private Boolean branding = false;

  @SerializedName("publishingNotice")
  private Boolean publishingNotice = false;

  @SerializedName("siteTitle")
  private String siteTitle = null;

  @SerializedName("userDisplayName")
  private String userDisplayName = null;

  @SerializedName("userSecondaryDisplayName")
  private String userSecondaryDisplayName = null;

  @SerializedName("userAffiliation")
  private Boolean userAffiliation = false;

  @SerializedName("defaultUsername")
  private String defaultUsername = null;

  @SerializedName("defaultPassword")
  private String defaultPassword = null;

  @SerializedName("banner")
  private Banner banner = null;

  @SerializedName("availableMds")
  private List<AvailableMds> availableMds = null;

  @SerializedName("availableRepositories")
  private List<String> availableRepositories = null;

  @SerializedName("searchViewType")
  private Integer searchViewType = null;

  @SerializedName("itemsPerRequest")
  private Integer itemsPerRequest = null;

  @SerializedName("rendering")
  private Rendering rendering = null;

  @SerializedName("sessionExpiredDialog")
  private SessionExpiredDialog sessionExpiredDialog = null;

  @SerializedName("loginDefaultLocation")
  private String loginDefaultLocation = null;

  @SerializedName("searchGroupResults")
  private Boolean searchGroupResults = false;

  @SerializedName("mainnav")
  private Mainnav mainnav = null;

  @SerializedName("searchSidenavMode")
  private String searchSidenavMode = null;

  @SerializedName("guest")
  private Guest guest = null;

  @SerializedName("collections")
  private Collections collections = null;

  @SerializedName("licenseAgreement")
  private LicenseAgreement licenseAgreement = null;

  @SerializedName("services")
  private Services services = null;

  @SerializedName("helpMenuOptions")
  private List<HelpMenuOptions> helpMenuOptions = null;

  @SerializedName("images")
  private List<Image> images = null;

  @SerializedName("stream")
  private Stream stream = null;

  @SerializedName("admin")
  private Admin admin = null;

  public Values supportedLanguages(List<String> supportedLanguages) {
    this.supportedLanguages = supportedLanguages;
    return this;
  }

  public Values addSupportedLanguagesItem(String supportedLanguagesItem) {
    if (this.supportedLanguages == null) {
      this.supportedLanguages = new ArrayList<String>();
    }
    this.supportedLanguages.add(supportedLanguagesItem);
    return this;
  }

   /**
   * Get supportedLanguages
   * @return supportedLanguages
  **/
  @ApiModelProperty(value = "")
  public List<String> getSupportedLanguages() {
    return supportedLanguages;
  }

  public void setSupportedLanguages(List<String> supportedLanguages) {
    this.supportedLanguages = supportedLanguages;
  }

  public Values extension(String extension) {
    this.extension = extension;
    return this;
  }

   /**
   * Get extension
   * @return extension
  **/
  @ApiModelProperty(value = "")
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }

  public Values loginUrl(String loginUrl) {
    this.loginUrl = loginUrl;
    return this;
  }

   /**
   * Get loginUrl
   * @return loginUrl
  **/
  @ApiModelProperty(value = "")
  public String getLoginUrl() {
    return loginUrl;
  }

  public void setLoginUrl(String loginUrl) {
    this.loginUrl = loginUrl;
  }

  public Values loginAllowLocal(Boolean loginAllowLocal) {
    this.loginAllowLocal = loginAllowLocal;
    return this;
  }

   /**
   * Get loginAllowLocal
   * @return loginAllowLocal
  **/
  @ApiModelProperty(value = "")
  public Boolean isLoginAllowLocal() {
    return loginAllowLocal;
  }

  public void setLoginAllowLocal(Boolean loginAllowLocal) {
    this.loginAllowLocal = loginAllowLocal;
  }

  public Values loginProvidersUrl(String loginProvidersUrl) {
    this.loginProvidersUrl = loginProvidersUrl;
    return this;
  }

   /**
   * Get loginProvidersUrl
   * @return loginProvidersUrl
  **/
  @ApiModelProperty(value = "")
  public String getLoginProvidersUrl() {
    return loginProvidersUrl;
  }

  public void setLoginProvidersUrl(String loginProvidersUrl) {
    this.loginProvidersUrl = loginProvidersUrl;
  }

  public Values loginProviderTargetUrl(String loginProviderTargetUrl) {
    this.loginProviderTargetUrl = loginProviderTargetUrl;
    return this;
  }

   /**
   * Get loginProviderTargetUrl
   * @return loginProviderTargetUrl
  **/
  @ApiModelProperty(value = "")
  public String getLoginProviderTargetUrl() {
    return loginProviderTargetUrl;
  }

  public void setLoginProviderTargetUrl(String loginProviderTargetUrl) {
    this.loginProviderTargetUrl = loginProviderTargetUrl;
  }

  public Values register(Register register) {
    this.register = register;
    return this;
  }

   /**
   * Get register
   * @return register
  **/
  @ApiModelProperty(value = "")
  public Register getRegister() {
    return register;
  }

  public void setRegister(Register register) {
    this.register = register;
  }

  public Values recoverPasswordUrl(String recoverPasswordUrl) {
    this.recoverPasswordUrl = recoverPasswordUrl;
    return this;
  }

   /**
   * Get recoverPasswordUrl
   * @return recoverPasswordUrl
  **/
  @ApiModelProperty(value = "")
  public String getRecoverPasswordUrl() {
    return recoverPasswordUrl;
  }

  public void setRecoverPasswordUrl(String recoverPasswordUrl) {
    this.recoverPasswordUrl = recoverPasswordUrl;
  }

  public Values imprintUrl(String imprintUrl) {
    this.imprintUrl = imprintUrl;
    return this;
  }

   /**
   * Get imprintUrl
   * @return imprintUrl
  **/
  @ApiModelProperty(value = "")
  public String getImprintUrl() {
    return imprintUrl;
  }

  public void setImprintUrl(String imprintUrl) {
    this.imprintUrl = imprintUrl;
  }

  public Values privacyInformationUrl(String privacyInformationUrl) {
    this.privacyInformationUrl = privacyInformationUrl;
    return this;
  }

   /**
   * Get privacyInformationUrl
   * @return privacyInformationUrl
  **/
  @ApiModelProperty(value = "")
  public String getPrivacyInformationUrl() {
    return privacyInformationUrl;
  }

  public void setPrivacyInformationUrl(String privacyInformationUrl) {
    this.privacyInformationUrl = privacyInformationUrl;
  }

  public Values helpUrl(String helpUrl) {
    this.helpUrl = helpUrl;
    return this;
  }

   /**
   * Get helpUrl
   * @return helpUrl
  **/
  @ApiModelProperty(value = "")
  public String getHelpUrl() {
    return helpUrl;
  }

  public void setHelpUrl(String helpUrl) {
    this.helpUrl = helpUrl;
  }

  public Values whatsNewUrl(String whatsNewUrl) {
    this.whatsNewUrl = whatsNewUrl;
    return this;
  }

   /**
   * Get whatsNewUrl
   * @return whatsNewUrl
  **/
  @ApiModelProperty(value = "")
  public String getWhatsNewUrl() {
    return whatsNewUrl;
  }

  public void setWhatsNewUrl(String whatsNewUrl) {
    this.whatsNewUrl = whatsNewUrl;
  }

  public Values editProfileUrl(String editProfileUrl) {
    this.editProfileUrl = editProfileUrl;
    return this;
  }

   /**
   * Get editProfileUrl
   * @return editProfileUrl
  **/
  @ApiModelProperty(value = "")
  public String getEditProfileUrl() {
    return editProfileUrl;
  }

  public void setEditProfileUrl(String editProfileUrl) {
    this.editProfileUrl = editProfileUrl;
  }

  public Values editProfile(Boolean editProfile) {
    this.editProfile = editProfile;
    return this;
  }

   /**
   * Get editProfile
   * @return editProfile
  **/
  @ApiModelProperty(value = "")
  public Boolean isEditProfile() {
    return editProfile;
  }

  public void setEditProfile(Boolean editProfile) {
    this.editProfile = editProfile;
  }

  public Values workspaceColumns(List<String> workspaceColumns) {
    this.workspaceColumns = workspaceColumns;
    return this;
  }

  public Values addWorkspaceColumnsItem(String workspaceColumnsItem) {
    if (this.workspaceColumns == null) {
      this.workspaceColumns = new ArrayList<String>();
    }
    this.workspaceColumns.add(workspaceColumnsItem);
    return this;
  }

   /**
   * Get workspaceColumns
   * @return workspaceColumns
  **/
  @ApiModelProperty(value = "")
  public List<String> getWorkspaceColumns() {
    return workspaceColumns;
  }

  public void setWorkspaceColumns(List<String> workspaceColumns) {
    this.workspaceColumns = workspaceColumns;
  }

  public Values hideMainMenu(List<String> hideMainMenu) {
    this.hideMainMenu = hideMainMenu;
    return this;
  }

  public Values addHideMainMenuItem(String hideMainMenuItem) {
    if (this.hideMainMenu == null) {
      this.hideMainMenu = new ArrayList<String>();
    }
    this.hideMainMenu.add(hideMainMenuItem);
    return this;
  }

   /**
   * Get hideMainMenu
   * @return hideMainMenu
  **/
  @ApiModelProperty(value = "")
  public List<String> getHideMainMenu() {
    return hideMainMenu;
  }

  public void setHideMainMenu(List<String> hideMainMenu) {
    this.hideMainMenu = hideMainMenu;
  }

  public Values logout(LogoutInfo logout) {
    this.logout = logout;
    return this;
  }

   /**
   * Get logout
   * @return logout
  **/
  @ApiModelProperty(value = "")
  public LogoutInfo getLogout() {
    return logout;
  }

  public void setLogout(LogoutInfo logout) {
    this.logout = logout;
  }

  public Values menuEntries(List<MenuEntry> menuEntries) {
    this.menuEntries = menuEntries;
    return this;
  }

  public Values addMenuEntriesItem(MenuEntry menuEntriesItem) {
    if (this.menuEntries == null) {
      this.menuEntries = new ArrayList<MenuEntry>();
    }
    this.menuEntries.add(menuEntriesItem);
    return this;
  }

   /**
   * Get menuEntries
   * @return menuEntries
  **/
  @ApiModelProperty(value = "")
  public List<MenuEntry> getMenuEntries() {
    return menuEntries;
  }

  public void setMenuEntries(List<MenuEntry> menuEntries) {
    this.menuEntries = menuEntries;
  }

  public Values nodeOptions(List<ContextMenuEntry> nodeOptions) {
    this.nodeOptions = nodeOptions;
    return this;
  }

  public Values addNodeOptionsItem(ContextMenuEntry nodeOptionsItem) {
    if (this.nodeOptions == null) {
      this.nodeOptions = new ArrayList<ContextMenuEntry>();
    }
    this.nodeOptions.add(nodeOptionsItem);
    return this;
  }

   /**
   * Get nodeOptions
   * @return nodeOptions
  **/
  @ApiModelProperty(value = "")
  public List<ContextMenuEntry> getNodeOptions() {
    return nodeOptions;
  }

  public void setNodeOptions(List<ContextMenuEntry> nodeOptions) {
    this.nodeOptions = nodeOptions;
  }

  public Values searchNodeOptions(List<ContextMenuEntry> searchNodeOptions) {
    this.searchNodeOptions = searchNodeOptions;
    return this;
  }

  public Values addSearchNodeOptionsItem(ContextMenuEntry searchNodeOptionsItem) {
    if (this.searchNodeOptions == null) {
      this.searchNodeOptions = new ArrayList<ContextMenuEntry>();
    }
    this.searchNodeOptions.add(searchNodeOptionsItem);
    return this;
  }

   /**
   * Get searchNodeOptions
   * @return searchNodeOptions
  **/
  @ApiModelProperty(value = "")
  public List<ContextMenuEntry> getSearchNodeOptions() {
    return searchNodeOptions;
  }

  public void setSearchNodeOptions(List<ContextMenuEntry> searchNodeOptions) {
    this.searchNodeOptions = searchNodeOptions;
  }

  public Values renderNodeOptions(List<ContextMenuEntry> renderNodeOptions) {
    this.renderNodeOptions = renderNodeOptions;
    return this;
  }

  public Values addRenderNodeOptionsItem(ContextMenuEntry renderNodeOptionsItem) {
    if (this.renderNodeOptions == null) {
      this.renderNodeOptions = new ArrayList<ContextMenuEntry>();
    }
    this.renderNodeOptions.add(renderNodeOptionsItem);
    return this;
  }

   /**
   * Get renderNodeOptions
   * @return renderNodeOptions
  **/
  @ApiModelProperty(value = "")
  public List<ContextMenuEntry> getRenderNodeOptions() {
    return renderNodeOptions;
  }

  public void setRenderNodeOptions(List<ContextMenuEntry> renderNodeOptions) {
    this.renderNodeOptions = renderNodeOptions;
  }

  public Values collectionNodeOptions(List<ContextMenuEntry> collectionNodeOptions) {
    this.collectionNodeOptions = collectionNodeOptions;
    return this;
  }

  public Values addCollectionNodeOptionsItem(ContextMenuEntry collectionNodeOptionsItem) {
    if (this.collectionNodeOptions == null) {
      this.collectionNodeOptions = new ArrayList<ContextMenuEntry>();
    }
    this.collectionNodeOptions.add(collectionNodeOptionsItem);
    return this;
  }

   /**
   * Get collectionNodeOptions
   * @return collectionNodeOptions
  **/
  @ApiModelProperty(value = "")
  public List<ContextMenuEntry> getCollectionNodeOptions() {
    return collectionNodeOptions;
  }

  public void setCollectionNodeOptions(List<ContextMenuEntry> collectionNodeOptions) {
    this.collectionNodeOptions = collectionNodeOptions;
  }

  public Values nodeStoreOptions(List<ContextMenuEntry> nodeStoreOptions) {
    this.nodeStoreOptions = nodeStoreOptions;
    return this;
  }

  public Values addNodeStoreOptionsItem(ContextMenuEntry nodeStoreOptionsItem) {
    if (this.nodeStoreOptions == null) {
      this.nodeStoreOptions = new ArrayList<ContextMenuEntry>();
    }
    this.nodeStoreOptions.add(nodeStoreOptionsItem);
    return this;
  }

   /**
   * Get nodeStoreOptions
   * @return nodeStoreOptions
  **/
  @ApiModelProperty(value = "")
  public List<ContextMenuEntry> getNodeStoreOptions() {
    return nodeStoreOptions;
  }

  public void setNodeStoreOptions(List<ContextMenuEntry> nodeStoreOptions) {
    this.nodeStoreOptions = nodeStoreOptions;
  }

  public Values allowedLicenses(List<String> allowedLicenses) {
    this.allowedLicenses = allowedLicenses;
    return this;
  }

  public Values addAllowedLicensesItem(String allowedLicensesItem) {
    if (this.allowedLicenses == null) {
      this.allowedLicenses = new ArrayList<String>();
    }
    this.allowedLicenses.add(allowedLicensesItem);
    return this;
  }

   /**
   * Get allowedLicenses
   * @return allowedLicenses
  **/
  @ApiModelProperty(value = "")
  public List<String> getAllowedLicenses() {
    return allowedLicenses;
  }

  public void setAllowedLicenses(List<String> allowedLicenses) {
    this.allowedLicenses = allowedLicenses;
  }

  public Values customLicenses(List<License> customLicenses) {
    this.customLicenses = customLicenses;
    return this;
  }

  public Values addCustomLicensesItem(License customLicensesItem) {
    if (this.customLicenses == null) {
      this.customLicenses = new ArrayList<License>();
    }
    this.customLicenses.add(customLicensesItem);
    return this;
  }

   /**
   * Get customLicenses
   * @return customLicenses
  **/
  @ApiModelProperty(value = "")
  public List<License> getCustomLicenses() {
    return customLicenses;
  }

  public void setCustomLicenses(List<License> customLicenses) {
    this.customLicenses = customLicenses;
  }

  public Values workflows(List<Workflow> workflows) {
    this.workflows = workflows;
    return this;
  }

  public Values addWorkflowsItem(Workflow workflowsItem) {
    if (this.workflows == null) {
      this.workflows = new ArrayList<Workflow>();
    }
    this.workflows.add(workflowsItem);
    return this;
  }

   /**
   * Get workflows
   * @return workflows
  **/
  @ApiModelProperty(value = "")
  public List<Workflow> getWorkflows() {
    return workflows;
  }

  public void setWorkflows(List<Workflow> workflows) {
    this.workflows = workflows;
  }

  public Values licenseDialogOnUpload(Boolean licenseDialogOnUpload) {
    this.licenseDialogOnUpload = licenseDialogOnUpload;
    return this;
  }

   /**
   * Get licenseDialogOnUpload
   * @return licenseDialogOnUpload
  **/
  @ApiModelProperty(value = "")
  public Boolean isLicenseDialogOnUpload() {
    return licenseDialogOnUpload;
  }

  public void setLicenseDialogOnUpload(Boolean licenseDialogOnUpload) {
    this.licenseDialogOnUpload = licenseDialogOnUpload;
  }

  public Values nodeReport(Boolean nodeReport) {
    this.nodeReport = nodeReport;
    return this;
  }

   /**
   * Get nodeReport
   * @return nodeReport
  **/
  @ApiModelProperty(value = "")
  public Boolean isNodeReport() {
    return nodeReport;
  }

  public void setNodeReport(Boolean nodeReport) {
    this.nodeReport = nodeReport;
  }

  public Values branding(Boolean branding) {
    this.branding = branding;
    return this;
  }

   /**
   * Get branding
   * @return branding
  **/
  @ApiModelProperty(value = "")
  public Boolean isBranding() {
    return branding;
  }

  public void setBranding(Boolean branding) {
    this.branding = branding;
  }

  public Values publishingNotice(Boolean publishingNotice) {
    this.publishingNotice = publishingNotice;
    return this;
  }

   /**
   * Get publishingNotice
   * @return publishingNotice
  **/
  @ApiModelProperty(value = "")
  public Boolean isPublishingNotice() {
    return publishingNotice;
  }

  public void setPublishingNotice(Boolean publishingNotice) {
    this.publishingNotice = publishingNotice;
  }

  public Values siteTitle(String siteTitle) {
    this.siteTitle = siteTitle;
    return this;
  }

   /**
   * Get siteTitle
   * @return siteTitle
  **/
  @ApiModelProperty(value = "")
  public String getSiteTitle() {
    return siteTitle;
  }

  public void setSiteTitle(String siteTitle) {
    this.siteTitle = siteTitle;
  }

  public Values userDisplayName(String userDisplayName) {
    this.userDisplayName = userDisplayName;
    return this;
  }

   /**
   * Get userDisplayName
   * @return userDisplayName
  **/
  @ApiModelProperty(value = "")
  public String getUserDisplayName() {
    return userDisplayName;
  }

  public void setUserDisplayName(String userDisplayName) {
    this.userDisplayName = userDisplayName;
  }

  public Values userSecondaryDisplayName(String userSecondaryDisplayName) {
    this.userSecondaryDisplayName = userSecondaryDisplayName;
    return this;
  }

   /**
   * Get userSecondaryDisplayName
   * @return userSecondaryDisplayName
  **/
  @ApiModelProperty(value = "")
  public String getUserSecondaryDisplayName() {
    return userSecondaryDisplayName;
  }

  public void setUserSecondaryDisplayName(String userSecondaryDisplayName) {
    this.userSecondaryDisplayName = userSecondaryDisplayName;
  }

  public Values userAffiliation(Boolean userAffiliation) {
    this.userAffiliation = userAffiliation;
    return this;
  }

   /**
   * Get userAffiliation
   * @return userAffiliation
  **/
  @ApiModelProperty(value = "")
  public Boolean isUserAffiliation() {
    return userAffiliation;
  }

  public void setUserAffiliation(Boolean userAffiliation) {
    this.userAffiliation = userAffiliation;
  }

  public Values defaultUsername(String defaultUsername) {
    this.defaultUsername = defaultUsername;
    return this;
  }

   /**
   * Get defaultUsername
   * @return defaultUsername
  **/
  @ApiModelProperty(value = "")
  public String getDefaultUsername() {
    return defaultUsername;
  }

  public void setDefaultUsername(String defaultUsername) {
    this.defaultUsername = defaultUsername;
  }

  public Values defaultPassword(String defaultPassword) {
    this.defaultPassword = defaultPassword;
    return this;
  }

   /**
   * Get defaultPassword
   * @return defaultPassword
  **/
  @ApiModelProperty(value = "")
  public String getDefaultPassword() {
    return defaultPassword;
  }

  public void setDefaultPassword(String defaultPassword) {
    this.defaultPassword = defaultPassword;
  }

  public Values banner(Banner banner) {
    this.banner = banner;
    return this;
  }

   /**
   * Get banner
   * @return banner
  **/
  @ApiModelProperty(value = "")
  public Banner getBanner() {
    return banner;
  }

  public void setBanner(Banner banner) {
    this.banner = banner;
  }

  public Values availableMds(List<AvailableMds> availableMds) {
    this.availableMds = availableMds;
    return this;
  }

  public Values addAvailableMdsItem(AvailableMds availableMdsItem) {
    if (this.availableMds == null) {
      this.availableMds = new ArrayList<AvailableMds>();
    }
    this.availableMds.add(availableMdsItem);
    return this;
  }

   /**
   * Get availableMds
   * @return availableMds
  **/
  @ApiModelProperty(value = "")
  public List<AvailableMds> getAvailableMds() {
    return availableMds;
  }

  public void setAvailableMds(List<AvailableMds> availableMds) {
    this.availableMds = availableMds;
  }

  public Values availableRepositories(List<String> availableRepositories) {
    this.availableRepositories = availableRepositories;
    return this;
  }

  public Values addAvailableRepositoriesItem(String availableRepositoriesItem) {
    if (this.availableRepositories == null) {
      this.availableRepositories = new ArrayList<String>();
    }
    this.availableRepositories.add(availableRepositoriesItem);
    return this;
  }

   /**
   * Get availableRepositories
   * @return availableRepositories
  **/
  @ApiModelProperty(value = "")
  public List<String> getAvailableRepositories() {
    return availableRepositories;
  }

  public void setAvailableRepositories(List<String> availableRepositories) {
    this.availableRepositories = availableRepositories;
  }

  public Values searchViewType(Integer searchViewType) {
    this.searchViewType = searchViewType;
    return this;
  }

   /**
   * Get searchViewType
   * @return searchViewType
  **/
  @ApiModelProperty(value = "")
  public Integer getSearchViewType() {
    return searchViewType;
  }

  public void setSearchViewType(Integer searchViewType) {
    this.searchViewType = searchViewType;
  }

  public Values itemsPerRequest(Integer itemsPerRequest) {
    this.itemsPerRequest = itemsPerRequest;
    return this;
  }

   /**
   * Get itemsPerRequest
   * @return itemsPerRequest
  **/
  @ApiModelProperty(value = "")
  public Integer getItemsPerRequest() {
    return itemsPerRequest;
  }

  public void setItemsPerRequest(Integer itemsPerRequest) {
    this.itemsPerRequest = itemsPerRequest;
  }

  public Values rendering(Rendering rendering) {
    this.rendering = rendering;
    return this;
  }

   /**
   * Get rendering
   * @return rendering
  **/
  @ApiModelProperty(value = "")
  public Rendering getRendering() {
    return rendering;
  }

  public void setRendering(Rendering rendering) {
    this.rendering = rendering;
  }

  public Values sessionExpiredDialog(SessionExpiredDialog sessionExpiredDialog) {
    this.sessionExpiredDialog = sessionExpiredDialog;
    return this;
  }

   /**
   * Get sessionExpiredDialog
   * @return sessionExpiredDialog
  **/
  @ApiModelProperty(value = "")
  public SessionExpiredDialog getSessionExpiredDialog() {
    return sessionExpiredDialog;
  }

  public void setSessionExpiredDialog(SessionExpiredDialog sessionExpiredDialog) {
    this.sessionExpiredDialog = sessionExpiredDialog;
  }

  public Values loginDefaultLocation(String loginDefaultLocation) {
    this.loginDefaultLocation = loginDefaultLocation;
    return this;
  }

   /**
   * Get loginDefaultLocation
   * @return loginDefaultLocation
  **/
  @ApiModelProperty(value = "")
  public String getLoginDefaultLocation() {
    return loginDefaultLocation;
  }

  public void setLoginDefaultLocation(String loginDefaultLocation) {
    this.loginDefaultLocation = loginDefaultLocation;
  }

  public Values searchGroupResults(Boolean searchGroupResults) {
    this.searchGroupResults = searchGroupResults;
    return this;
  }

   /**
   * Get searchGroupResults
   * @return searchGroupResults
  **/
  @ApiModelProperty(value = "")
  public Boolean isSearchGroupResults() {
    return searchGroupResults;
  }

  public void setSearchGroupResults(Boolean searchGroupResults) {
    this.searchGroupResults = searchGroupResults;
  }

  public Values mainnav(Mainnav mainnav) {
    this.mainnav = mainnav;
    return this;
  }

   /**
   * Get mainnav
   * @return mainnav
  **/
  @ApiModelProperty(value = "")
  public Mainnav getMainnav() {
    return mainnav;
  }

  public void setMainnav(Mainnav mainnav) {
    this.mainnav = mainnav;
  }

  public Values searchSidenavMode(String searchSidenavMode) {
    this.searchSidenavMode = searchSidenavMode;
    return this;
  }

   /**
   * Get searchSidenavMode
   * @return searchSidenavMode
  **/
  @ApiModelProperty(value = "")
  public String getSearchSidenavMode() {
    return searchSidenavMode;
  }

  public void setSearchSidenavMode(String searchSidenavMode) {
    this.searchSidenavMode = searchSidenavMode;
  }

  public Values guest(Guest guest) {
    this.guest = guest;
    return this;
  }

   /**
   * Get guest
   * @return guest
  **/
  @ApiModelProperty(value = "")
  public Guest getGuest() {
    return guest;
  }

  public void setGuest(Guest guest) {
    this.guest = guest;
  }

  public Values collections(Collections collections) {
    this.collections = collections;
    return this;
  }

   /**
   * Get collections
   * @return collections
  **/
  @ApiModelProperty(value = "")
  public Collections getCollections() {
    return collections;
  }

  public void setCollections(Collections collections) {
    this.collections = collections;
  }

  public Values licenseAgreement(LicenseAgreement licenseAgreement) {
    this.licenseAgreement = licenseAgreement;
    return this;
  }

   /**
   * Get licenseAgreement
   * @return licenseAgreement
  **/
  @ApiModelProperty(value = "")
  public LicenseAgreement getLicenseAgreement() {
    return licenseAgreement;
  }

  public void setLicenseAgreement(LicenseAgreement licenseAgreement) {
    this.licenseAgreement = licenseAgreement;
  }

  public Values services(Services services) {
    this.services = services;
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @ApiModelProperty(value = "")
  public Services getServices() {
    return services;
  }

  public void setServices(Services services) {
    this.services = services;
  }

  public Values helpMenuOptions(List<HelpMenuOptions> helpMenuOptions) {
    this.helpMenuOptions = helpMenuOptions;
    return this;
  }

  public Values addHelpMenuOptionsItem(HelpMenuOptions helpMenuOptionsItem) {
    if (this.helpMenuOptions == null) {
      this.helpMenuOptions = new ArrayList<HelpMenuOptions>();
    }
    this.helpMenuOptions.add(helpMenuOptionsItem);
    return this;
  }

   /**
   * Get helpMenuOptions
   * @return helpMenuOptions
  **/
  @ApiModelProperty(value = "")
  public List<HelpMenuOptions> getHelpMenuOptions() {
    return helpMenuOptions;
  }

  public void setHelpMenuOptions(List<HelpMenuOptions> helpMenuOptions) {
    this.helpMenuOptions = helpMenuOptions;
  }

  public Values images(List<Image> images) {
    this.images = images;
    return this;
  }

  public Values addImagesItem(Image imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<Image>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @ApiModelProperty(value = "")
  public List<Image> getImages() {
    return images;
  }

  public void setImages(List<Image> images) {
    this.images = images;
  }

  public Values stream(Stream stream) {
    this.stream = stream;
    return this;
  }

   /**
   * Get stream
   * @return stream
  **/
  @ApiModelProperty(value = "")
  public Stream getStream() {
    return stream;
  }

  public void setStream(Stream stream) {
    this.stream = stream;
  }

  public Values admin(Admin admin) {
    this.admin = admin;
    return this;
  }

   /**
   * Get admin
   * @return admin
  **/
  @ApiModelProperty(value = "")
  public Admin getAdmin() {
    return admin;
  }

  public void setAdmin(Admin admin) {
    this.admin = admin;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Values values = (Values) o;
    return Objects.equals(this.supportedLanguages, values.supportedLanguages) &&
        Objects.equals(this.extension, values.extension) &&
        Objects.equals(this.loginUrl, values.loginUrl) &&
        Objects.equals(this.loginAllowLocal, values.loginAllowLocal) &&
        Objects.equals(this.loginProvidersUrl, values.loginProvidersUrl) &&
        Objects.equals(this.loginProviderTargetUrl, values.loginProviderTargetUrl) &&
        Objects.equals(this.register, values.register) &&
        Objects.equals(this.recoverPasswordUrl, values.recoverPasswordUrl) &&
        Objects.equals(this.imprintUrl, values.imprintUrl) &&
        Objects.equals(this.privacyInformationUrl, values.privacyInformationUrl) &&
        Objects.equals(this.helpUrl, values.helpUrl) &&
        Objects.equals(this.whatsNewUrl, values.whatsNewUrl) &&
        Objects.equals(this.editProfileUrl, values.editProfileUrl) &&
        Objects.equals(this.editProfile, values.editProfile) &&
        Objects.equals(this.workspaceColumns, values.workspaceColumns) &&
        Objects.equals(this.hideMainMenu, values.hideMainMenu) &&
        Objects.equals(this.logout, values.logout) &&
        Objects.equals(this.menuEntries, values.menuEntries) &&
        Objects.equals(this.nodeOptions, values.nodeOptions) &&
        Objects.equals(this.searchNodeOptions, values.searchNodeOptions) &&
        Objects.equals(this.renderNodeOptions, values.renderNodeOptions) &&
        Objects.equals(this.collectionNodeOptions, values.collectionNodeOptions) &&
        Objects.equals(this.nodeStoreOptions, values.nodeStoreOptions) &&
        Objects.equals(this.allowedLicenses, values.allowedLicenses) &&
        Objects.equals(this.customLicenses, values.customLicenses) &&
        Objects.equals(this.workflows, values.workflows) &&
        Objects.equals(this.licenseDialogOnUpload, values.licenseDialogOnUpload) &&
        Objects.equals(this.nodeReport, values.nodeReport) &&
        Objects.equals(this.branding, values.branding) &&
        Objects.equals(this.publishingNotice, values.publishingNotice) &&
        Objects.equals(this.siteTitle, values.siteTitle) &&
        Objects.equals(this.userDisplayName, values.userDisplayName) &&
        Objects.equals(this.userSecondaryDisplayName, values.userSecondaryDisplayName) &&
        Objects.equals(this.userAffiliation, values.userAffiliation) &&
        Objects.equals(this.defaultUsername, values.defaultUsername) &&
        Objects.equals(this.defaultPassword, values.defaultPassword) &&
        Objects.equals(this.banner, values.banner) &&
        Objects.equals(this.availableMds, values.availableMds) &&
        Objects.equals(this.availableRepositories, values.availableRepositories) &&
        Objects.equals(this.searchViewType, values.searchViewType) &&
        Objects.equals(this.itemsPerRequest, values.itemsPerRequest) &&
        Objects.equals(this.rendering, values.rendering) &&
        Objects.equals(this.sessionExpiredDialog, values.sessionExpiredDialog) &&
        Objects.equals(this.loginDefaultLocation, values.loginDefaultLocation) &&
        Objects.equals(this.searchGroupResults, values.searchGroupResults) &&
        Objects.equals(this.mainnav, values.mainnav) &&
        Objects.equals(this.searchSidenavMode, values.searchSidenavMode) &&
        Objects.equals(this.guest, values.guest) &&
        Objects.equals(this.collections, values.collections) &&
        Objects.equals(this.licenseAgreement, values.licenseAgreement) &&
        Objects.equals(this.services, values.services) &&
        Objects.equals(this.helpMenuOptions, values.helpMenuOptions) &&
        Objects.equals(this.images, values.images) &&
        Objects.equals(this.stream, values.stream) &&
        Objects.equals(this.admin, values.admin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportedLanguages, extension, loginUrl, loginAllowLocal, loginProvidersUrl, loginProviderTargetUrl, register, recoverPasswordUrl, imprintUrl, privacyInformationUrl, helpUrl, whatsNewUrl, editProfileUrl, editProfile, workspaceColumns, hideMainMenu, logout, menuEntries, nodeOptions, searchNodeOptions, renderNodeOptions, collectionNodeOptions, nodeStoreOptions, allowedLicenses, customLicenses, workflows, licenseDialogOnUpload, nodeReport, branding, publishingNotice, siteTitle, userDisplayName, userSecondaryDisplayName, userAffiliation, defaultUsername, defaultPassword, banner, availableMds, availableRepositories, searchViewType, itemsPerRequest, rendering, sessionExpiredDialog, loginDefaultLocation, searchGroupResults, mainnav, searchSidenavMode, guest, collections, licenseAgreement, services, helpMenuOptions, images, stream, admin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Values {\n");
    
    sb.append("    supportedLanguages: ").append(toIndentedString(supportedLanguages)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    loginUrl: ").append(toIndentedString(loginUrl)).append("\n");
    sb.append("    loginAllowLocal: ").append(toIndentedString(loginAllowLocal)).append("\n");
    sb.append("    loginProvidersUrl: ").append(toIndentedString(loginProvidersUrl)).append("\n");
    sb.append("    loginProviderTargetUrl: ").append(toIndentedString(loginProviderTargetUrl)).append("\n");
    sb.append("    register: ").append(toIndentedString(register)).append("\n");
    sb.append("    recoverPasswordUrl: ").append(toIndentedString(recoverPasswordUrl)).append("\n");
    sb.append("    imprintUrl: ").append(toIndentedString(imprintUrl)).append("\n");
    sb.append("    privacyInformationUrl: ").append(toIndentedString(privacyInformationUrl)).append("\n");
    sb.append("    helpUrl: ").append(toIndentedString(helpUrl)).append("\n");
    sb.append("    whatsNewUrl: ").append(toIndentedString(whatsNewUrl)).append("\n");
    sb.append("    editProfileUrl: ").append(toIndentedString(editProfileUrl)).append("\n");
    sb.append("    editProfile: ").append(toIndentedString(editProfile)).append("\n");
    sb.append("    workspaceColumns: ").append(toIndentedString(workspaceColumns)).append("\n");
    sb.append("    hideMainMenu: ").append(toIndentedString(hideMainMenu)).append("\n");
    sb.append("    logout: ").append(toIndentedString(logout)).append("\n");
    sb.append("    menuEntries: ").append(toIndentedString(menuEntries)).append("\n");
    sb.append("    nodeOptions: ").append(toIndentedString(nodeOptions)).append("\n");
    sb.append("    searchNodeOptions: ").append(toIndentedString(searchNodeOptions)).append("\n");
    sb.append("    renderNodeOptions: ").append(toIndentedString(renderNodeOptions)).append("\n");
    sb.append("    collectionNodeOptions: ").append(toIndentedString(collectionNodeOptions)).append("\n");
    sb.append("    nodeStoreOptions: ").append(toIndentedString(nodeStoreOptions)).append("\n");
    sb.append("    allowedLicenses: ").append(toIndentedString(allowedLicenses)).append("\n");
    sb.append("    customLicenses: ").append(toIndentedString(customLicenses)).append("\n");
    sb.append("    workflows: ").append(toIndentedString(workflows)).append("\n");
    sb.append("    licenseDialogOnUpload: ").append(toIndentedString(licenseDialogOnUpload)).append("\n");
    sb.append("    nodeReport: ").append(toIndentedString(nodeReport)).append("\n");
    sb.append("    branding: ").append(toIndentedString(branding)).append("\n");
    sb.append("    publishingNotice: ").append(toIndentedString(publishingNotice)).append("\n");
    sb.append("    siteTitle: ").append(toIndentedString(siteTitle)).append("\n");
    sb.append("    userDisplayName: ").append(toIndentedString(userDisplayName)).append("\n");
    sb.append("    userSecondaryDisplayName: ").append(toIndentedString(userSecondaryDisplayName)).append("\n");
    sb.append("    userAffiliation: ").append(toIndentedString(userAffiliation)).append("\n");
    sb.append("    defaultUsername: ").append(toIndentedString(defaultUsername)).append("\n");
    sb.append("    defaultPassword: ").append(toIndentedString(defaultPassword)).append("\n");
    sb.append("    banner: ").append(toIndentedString(banner)).append("\n");
    sb.append("    availableMds: ").append(toIndentedString(availableMds)).append("\n");
    sb.append("    availableRepositories: ").append(toIndentedString(availableRepositories)).append("\n");
    sb.append("    searchViewType: ").append(toIndentedString(searchViewType)).append("\n");
    sb.append("    itemsPerRequest: ").append(toIndentedString(itemsPerRequest)).append("\n");
    sb.append("    rendering: ").append(toIndentedString(rendering)).append("\n");
    sb.append("    sessionExpiredDialog: ").append(toIndentedString(sessionExpiredDialog)).append("\n");
    sb.append("    loginDefaultLocation: ").append(toIndentedString(loginDefaultLocation)).append("\n");
    sb.append("    searchGroupResults: ").append(toIndentedString(searchGroupResults)).append("\n");
    sb.append("    mainnav: ").append(toIndentedString(mainnav)).append("\n");
    sb.append("    searchSidenavMode: ").append(toIndentedString(searchSidenavMode)).append("\n");
    sb.append("    guest: ").append(toIndentedString(guest)).append("\n");
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("    licenseAgreement: ").append(toIndentedString(licenseAgreement)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    helpMenuOptions: ").append(toIndentedString(helpMenuOptions)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

