/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Key;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * JobDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class JobDetail {
  @SerializedName("name")
  private String name = null;

  @SerializedName("group")
  private String group = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("jobDataMap")
  private Map<String, Object> jobDataMap = null;

  @SerializedName("durable")
  private Boolean durable = false;

  @SerializedName("stateful")
  private Boolean stateful = false;

  @SerializedName("jobListenerNames")
  private List<String> jobListenerNames = null;

  @SerializedName("fullName")
  private String fullName = null;

  @SerializedName("key")
  private Key key = null;

  @SerializedName("volatile")
  private Boolean _volatile = false;

  public JobDetail name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public JobDetail group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public JobDetail description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JobDetail jobDataMap(Map<String, Object> jobDataMap) {
    this.jobDataMap = jobDataMap;
    return this;
  }

  public JobDetail putJobDataMapItem(String key, Object jobDataMapItem) {
    if (this.jobDataMap == null) {
      this.jobDataMap = new HashMap<String, Object>();
    }
    this.jobDataMap.put(key, jobDataMapItem);
    return this;
  }

   /**
   * Get jobDataMap
   * @return jobDataMap
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getJobDataMap() {
    return jobDataMap;
  }

  public void setJobDataMap(Map<String, Object> jobDataMap) {
    this.jobDataMap = jobDataMap;
  }

  public JobDetail durable(Boolean durable) {
    this.durable = durable;
    return this;
  }

   /**
   * Get durable
   * @return durable
  **/
  @ApiModelProperty(value = "")
  public Boolean isDurable() {
    return durable;
  }

  public void setDurable(Boolean durable) {
    this.durable = durable;
  }

  public JobDetail stateful(Boolean stateful) {
    this.stateful = stateful;
    return this;
  }

   /**
   * Get stateful
   * @return stateful
  **/
  @ApiModelProperty(value = "")
  public Boolean isStateful() {
    return stateful;
  }

  public void setStateful(Boolean stateful) {
    this.stateful = stateful;
  }

  public JobDetail jobListenerNames(List<String> jobListenerNames) {
    this.jobListenerNames = jobListenerNames;
    return this;
  }

  public JobDetail addJobListenerNamesItem(String jobListenerNamesItem) {
    if (this.jobListenerNames == null) {
      this.jobListenerNames = new ArrayList<String>();
    }
    this.jobListenerNames.add(jobListenerNamesItem);
    return this;
  }

   /**
   * Get jobListenerNames
   * @return jobListenerNames
  **/
  @ApiModelProperty(value = "")
  public List<String> getJobListenerNames() {
    return jobListenerNames;
  }

  public void setJobListenerNames(List<String> jobListenerNames) {
    this.jobListenerNames = jobListenerNames;
  }

  public JobDetail fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @ApiModelProperty(value = "")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public JobDetail key(Key key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @ApiModelProperty(value = "")
  public Key getKey() {
    return key;
  }

  public void setKey(Key key) {
    this.key = key;
  }

  public JobDetail _volatile(Boolean _volatile) {
    this._volatile = _volatile;
    return this;
  }

   /**
   * Get _volatile
   * @return _volatile
  **/
  @ApiModelProperty(value = "")
  public Boolean isVolatile() {
    return _volatile;
  }

  public void setVolatile(Boolean _volatile) {
    this._volatile = _volatile;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDetail jobDetail = (JobDetail) o;
    return Objects.equals(this.name, jobDetail.name) &&
        Objects.equals(this.group, jobDetail.group) &&
        Objects.equals(this.description, jobDetail.description) &&
        Objects.equals(this.jobDataMap, jobDetail.jobDataMap) &&
        Objects.equals(this.durable, jobDetail.durable) &&
        Objects.equals(this.stateful, jobDetail.stateful) &&
        Objects.equals(this.jobListenerNames, jobDetail.jobListenerNames) &&
        Objects.equals(this.fullName, jobDetail.fullName) &&
        Objects.equals(this.key, jobDetail.key) &&
        Objects.equals(this._volatile, jobDetail._volatile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, group, description, jobDataMap, durable, stateful, jobListenerNames, fullName, key, _volatile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDetail {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    jobDataMap: ").append(toIndentedString(jobDataMap)).append("\n");
    sb.append("    durable: ").append(toIndentedString(durable)).append("\n");
    sb.append("    stateful: ").append(toIndentedString(stateful)).append("\n");
    sb.append("    jobListenerNames: ").append(toIndentedString(jobListenerNames)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    _volatile: ").append(toIndentedString(_volatile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

