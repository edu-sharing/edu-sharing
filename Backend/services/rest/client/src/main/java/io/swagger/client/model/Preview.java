/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Preview
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class Preview {
  @SerializedName("isIcon")
  private Boolean isIcon = false;

  @SerializedName("isGenerated")
  private Boolean isGenerated = false;

  @SerializedName("url")
  private String url = null;

  @SerializedName("width")
  private Integer width = null;

  @SerializedName("height")
  private Integer height = null;

  public Preview isIcon(Boolean isIcon) {
    this.isIcon = isIcon;
    return this;
  }

   /**
   * Get isIcon
   * @return isIcon
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsIcon() {
    return isIcon;
  }

  public void setIsIcon(Boolean isIcon) {
    this.isIcon = isIcon;
  }

  public Preview isGenerated(Boolean isGenerated) {
    this.isGenerated = isGenerated;
    return this;
  }

   /**
   * Get isGenerated
   * @return isGenerated
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsGenerated() {
    return isGenerated;
  }

  public void setIsGenerated(Boolean isGenerated) {
    this.isGenerated = isGenerated;
  }

  public Preview url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Preview width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public Preview height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Preview preview = (Preview) o;
    return Objects.equals(this.isIcon, preview.isIcon) &&
        Objects.equals(this.isGenerated, preview.isGenerated) &&
        Objects.equals(this.url, preview.url) &&
        Objects.equals(this.width, preview.width) &&
        Objects.equals(this.height, preview.height);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isIcon, isGenerated, url, width, height);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Preview {\n");
    
    sb.append("    isIcon: ").append(toIndentedString(isIcon)).append("\n");
    sb.append("    isGenerated: ").append(toIndentedString(isGenerated)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

