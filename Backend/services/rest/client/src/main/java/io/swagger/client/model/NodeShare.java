/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NodeShare
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class NodeShare {
  @SerializedName("password")
  private Boolean password = false;

  @SerializedName("token")
  private String token = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("expiryDate")
  private Long expiryDate = null;

  @SerializedName("invitedAt")
  private Long invitedAt = null;

  @SerializedName("downloadCount")
  private Integer downloadCount = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("shareId")
  private String shareId = null;

  public NodeShare password(Boolean password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public Boolean isPassword() {
    return password;
  }

  public void setPassword(Boolean password) {
    this.password = password;
  }

  public NodeShare token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public NodeShare email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public NodeShare expiryDate(Long expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @ApiModelProperty(value = "")
  public Long getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(Long expiryDate) {
    this.expiryDate = expiryDate;
  }

  public NodeShare invitedAt(Long invitedAt) {
    this.invitedAt = invitedAt;
    return this;
  }

   /**
   * Get invitedAt
   * @return invitedAt
  **/
  @ApiModelProperty(value = "")
  public Long getInvitedAt() {
    return invitedAt;
  }

  public void setInvitedAt(Long invitedAt) {
    this.invitedAt = invitedAt;
  }

  public NodeShare downloadCount(Integer downloadCount) {
    this.downloadCount = downloadCount;
    return this;
  }

   /**
   * Get downloadCount
   * @return downloadCount
  **/
  @ApiModelProperty(value = "")
  public Integer getDownloadCount() {
    return downloadCount;
  }

  public void setDownloadCount(Integer downloadCount) {
    this.downloadCount = downloadCount;
  }

  public NodeShare url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public NodeShare shareId(String shareId) {
    this.shareId = shareId;
    return this;
  }

   /**
   * Get shareId
   * @return shareId
  **/
  @ApiModelProperty(value = "")
  public String getShareId() {
    return shareId;
  }

  public void setShareId(String shareId) {
    this.shareId = shareId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeShare nodeShare = (NodeShare) o;
    return Objects.equals(this.password, nodeShare.password) &&
        Objects.equals(this.token, nodeShare.token) &&
        Objects.equals(this.email, nodeShare.email) &&
        Objects.equals(this.expiryDate, nodeShare.expiryDate) &&
        Objects.equals(this.invitedAt, nodeShare.invitedAt) &&
        Objects.equals(this.downloadCount, nodeShare.downloadCount) &&
        Objects.equals(this.url, nodeShare.url) &&
        Objects.equals(this.shareId, nodeShare.shareId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(password, token, email, expiryDate, invitedAt, downloadCount, url, shareId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeShare {\n");
    
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    invitedAt: ").append(toIndentedString(invitedAt)).append("\n");
    sb.append("    downloadCount: ").append(toIndentedString(downloadCount)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    shareId: ").append(toIndentedString(shareId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

