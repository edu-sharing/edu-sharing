/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CollectionOptions;
import io.swagger.client.model.DeleteOption;
import io.swagger.client.model.HomeFolderOptions;
import io.swagger.client.model.SharedFolderOptions;
import java.io.IOException;

/**
 * PersonDeleteOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class PersonDeleteOptions {
  @SerializedName("cleanupMetadata")
  private Boolean cleanupMetadata = false;

  @SerializedName("homeFolder")
  private HomeFolderOptions homeFolder = null;

  @SerializedName("sharedFolders")
  private SharedFolderOptions sharedFolders = null;

  @SerializedName("collections")
  private CollectionOptions collections = null;

  @SerializedName("ratings")
  private DeleteOption ratings = null;

  @SerializedName("comments")
  private DeleteOption comments = null;

  @SerializedName("collectionFeedback")
  private DeleteOption collectionFeedback = null;

  @SerializedName("statistics")
  private DeleteOption statistics = null;

  @SerializedName("stream")
  private DeleteOption stream = null;

  @SerializedName("receiver")
  private String receiver = null;

  @SerializedName("receiverGroup")
  private String receiverGroup = null;

  public PersonDeleteOptions cleanupMetadata(Boolean cleanupMetadata) {
    this.cleanupMetadata = cleanupMetadata;
    return this;
  }

   /**
   * Get cleanupMetadata
   * @return cleanupMetadata
  **/
  @ApiModelProperty(value = "")
  public Boolean isCleanupMetadata() {
    return cleanupMetadata;
  }

  public void setCleanupMetadata(Boolean cleanupMetadata) {
    this.cleanupMetadata = cleanupMetadata;
  }

  public PersonDeleteOptions homeFolder(HomeFolderOptions homeFolder) {
    this.homeFolder = homeFolder;
    return this;
  }

   /**
   * Get homeFolder
   * @return homeFolder
  **/
  @ApiModelProperty(value = "")
  public HomeFolderOptions getHomeFolder() {
    return homeFolder;
  }

  public void setHomeFolder(HomeFolderOptions homeFolder) {
    this.homeFolder = homeFolder;
  }

  public PersonDeleteOptions sharedFolders(SharedFolderOptions sharedFolders) {
    this.sharedFolders = sharedFolders;
    return this;
  }

   /**
   * Get sharedFolders
   * @return sharedFolders
  **/
  @ApiModelProperty(value = "")
  public SharedFolderOptions getSharedFolders() {
    return sharedFolders;
  }

  public void setSharedFolders(SharedFolderOptions sharedFolders) {
    this.sharedFolders = sharedFolders;
  }

  public PersonDeleteOptions collections(CollectionOptions collections) {
    this.collections = collections;
    return this;
  }

   /**
   * Get collections
   * @return collections
  **/
  @ApiModelProperty(value = "")
  public CollectionOptions getCollections() {
    return collections;
  }

  public void setCollections(CollectionOptions collections) {
    this.collections = collections;
  }

  public PersonDeleteOptions ratings(DeleteOption ratings) {
    this.ratings = ratings;
    return this;
  }

   /**
   * Get ratings
   * @return ratings
  **/
  @ApiModelProperty(value = "")
  public DeleteOption getRatings() {
    return ratings;
  }

  public void setRatings(DeleteOption ratings) {
    this.ratings = ratings;
  }

  public PersonDeleteOptions comments(DeleteOption comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @ApiModelProperty(value = "")
  public DeleteOption getComments() {
    return comments;
  }

  public void setComments(DeleteOption comments) {
    this.comments = comments;
  }

  public PersonDeleteOptions collectionFeedback(DeleteOption collectionFeedback) {
    this.collectionFeedback = collectionFeedback;
    return this;
  }

   /**
   * Get collectionFeedback
   * @return collectionFeedback
  **/
  @ApiModelProperty(value = "")
  public DeleteOption getCollectionFeedback() {
    return collectionFeedback;
  }

  public void setCollectionFeedback(DeleteOption collectionFeedback) {
    this.collectionFeedback = collectionFeedback;
  }

  public PersonDeleteOptions statistics(DeleteOption statistics) {
    this.statistics = statistics;
    return this;
  }

   /**
   * Get statistics
   * @return statistics
  **/
  @ApiModelProperty(value = "")
  public DeleteOption getStatistics() {
    return statistics;
  }

  public void setStatistics(DeleteOption statistics) {
    this.statistics = statistics;
  }

  public PersonDeleteOptions stream(DeleteOption stream) {
    this.stream = stream;
    return this;
  }

   /**
   * Get stream
   * @return stream
  **/
  @ApiModelProperty(value = "")
  public DeleteOption getStream() {
    return stream;
  }

  public void setStream(DeleteOption stream) {
    this.stream = stream;
  }

  public PersonDeleteOptions receiver(String receiver) {
    this.receiver = receiver;
    return this;
  }

   /**
   * Get receiver
   * @return receiver
  **/
  @ApiModelProperty(value = "")
  public String getReceiver() {
    return receiver;
  }

  public void setReceiver(String receiver) {
    this.receiver = receiver;
  }

  public PersonDeleteOptions receiverGroup(String receiverGroup) {
    this.receiverGroup = receiverGroup;
    return this;
  }

   /**
   * Get receiverGroup
   * @return receiverGroup
  **/
  @ApiModelProperty(value = "")
  public String getReceiverGroup() {
    return receiverGroup;
  }

  public void setReceiverGroup(String receiverGroup) {
    this.receiverGroup = receiverGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonDeleteOptions personDeleteOptions = (PersonDeleteOptions) o;
    return Objects.equals(this.cleanupMetadata, personDeleteOptions.cleanupMetadata) &&
        Objects.equals(this.homeFolder, personDeleteOptions.homeFolder) &&
        Objects.equals(this.sharedFolders, personDeleteOptions.sharedFolders) &&
        Objects.equals(this.collections, personDeleteOptions.collections) &&
        Objects.equals(this.ratings, personDeleteOptions.ratings) &&
        Objects.equals(this.comments, personDeleteOptions.comments) &&
        Objects.equals(this.collectionFeedback, personDeleteOptions.collectionFeedback) &&
        Objects.equals(this.statistics, personDeleteOptions.statistics) &&
        Objects.equals(this.stream, personDeleteOptions.stream) &&
        Objects.equals(this.receiver, personDeleteOptions.receiver) &&
        Objects.equals(this.receiverGroup, personDeleteOptions.receiverGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cleanupMetadata, homeFolder, sharedFolders, collections, ratings, comments, collectionFeedback, statistics, stream, receiver, receiverGroup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonDeleteOptions {\n");
    
    sb.append("    cleanupMetadata: ").append(toIndentedString(cleanupMetadata)).append("\n");
    sb.append("    homeFolder: ").append(toIndentedString(homeFolder)).append("\n");
    sb.append("    sharedFolders: ").append(toIndentedString(sharedFolders)).append("\n");
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("    ratings: ").append(toIndentedString(ratings)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    collectionFeedback: ").append(toIndentedString(collectionFeedback)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("    receiver: ").append(toIndentedString(receiver)).append("\n");
    sb.append("    receiverGroup: ").append(toIndentedString(receiverGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

