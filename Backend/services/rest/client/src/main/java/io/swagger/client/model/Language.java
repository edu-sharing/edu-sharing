/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Language
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class Language {
  @SerializedName("global")
  private Map<String, String> global = null;

  @SerializedName("current")
  private Map<String, String> current = null;

  @SerializedName("currentLanguage")
  private String currentLanguage = null;

  public Language global(Map<String, String> global) {
    this.global = global;
    return this;
  }

  public Language putGlobalItem(String key, String globalItem) {
    if (this.global == null) {
      this.global = new HashMap<String, String>();
    }
    this.global.put(key, globalItem);
    return this;
  }

   /**
   * Get global
   * @return global
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getGlobal() {
    return global;
  }

  public void setGlobal(Map<String, String> global) {
    this.global = global;
  }

  public Language current(Map<String, String> current) {
    this.current = current;
    return this;
  }

  public Language putCurrentItem(String key, String currentItem) {
    if (this.current == null) {
      this.current = new HashMap<String, String>();
    }
    this.current.put(key, currentItem);
    return this;
  }

   /**
   * Get current
   * @return current
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getCurrent() {
    return current;
  }

  public void setCurrent(Map<String, String> current) {
    this.current = current;
  }

  public Language currentLanguage(String currentLanguage) {
    this.currentLanguage = currentLanguage;
    return this;
  }

   /**
   * Get currentLanguage
   * @return currentLanguage
  **/
  @ApiModelProperty(value = "")
  public String getCurrentLanguage() {
    return currentLanguage;
  }

  public void setCurrentLanguage(String currentLanguage) {
    this.currentLanguage = currentLanguage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Language language = (Language) o;
    return Objects.equals(this.global, language.global) &&
        Objects.equals(this.current, language.current) &&
        Objects.equals(this.currentLanguage, language.currentLanguage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(global, current, currentLanguage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Language {\n");
    
    sb.append("    global: ").append(toIndentedString(global)).append("\n");
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("    currentLanguage: ").append(toIndentedString(currentLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

