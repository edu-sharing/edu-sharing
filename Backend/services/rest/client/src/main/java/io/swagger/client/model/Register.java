/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Register
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class Register {
  @SerializedName("local")
  private Boolean local = false;

  @SerializedName("loginUrl")
  private String loginUrl = null;

  @SerializedName("recoverUrl")
  private String recoverUrl = null;

  @SerializedName("requiredFields")
  private List<String> requiredFields = null;

  public Register local(Boolean local) {
    this.local = local;
    return this;
  }

   /**
   * Get local
   * @return local
  **/
  @ApiModelProperty(value = "")
  public Boolean isLocal() {
    return local;
  }

  public void setLocal(Boolean local) {
    this.local = local;
  }

  public Register loginUrl(String loginUrl) {
    this.loginUrl = loginUrl;
    return this;
  }

   /**
   * Get loginUrl
   * @return loginUrl
  **/
  @ApiModelProperty(value = "")
  public String getLoginUrl() {
    return loginUrl;
  }

  public void setLoginUrl(String loginUrl) {
    this.loginUrl = loginUrl;
  }

  public Register recoverUrl(String recoverUrl) {
    this.recoverUrl = recoverUrl;
    return this;
  }

   /**
   * Get recoverUrl
   * @return recoverUrl
  **/
  @ApiModelProperty(value = "")
  public String getRecoverUrl() {
    return recoverUrl;
  }

  public void setRecoverUrl(String recoverUrl) {
    this.recoverUrl = recoverUrl;
  }

  public Register requiredFields(List<String> requiredFields) {
    this.requiredFields = requiredFields;
    return this;
  }

  public Register addRequiredFieldsItem(String requiredFieldsItem) {
    if (this.requiredFields == null) {
      this.requiredFields = new ArrayList<String>();
    }
    this.requiredFields.add(requiredFieldsItem);
    return this;
  }

   /**
   * Get requiredFields
   * @return requiredFields
  **/
  @ApiModelProperty(value = "")
  public List<String> getRequiredFields() {
    return requiredFields;
  }

  public void setRequiredFields(List<String> requiredFields) {
    this.requiredFields = requiredFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Register register = (Register) o;
    return Objects.equals(this.local, register.local) &&
        Objects.equals(this.loginUrl, register.loginUrl) &&
        Objects.equals(this.recoverUrl, register.recoverUrl) &&
        Objects.equals(this.requiredFields, register.requiredFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(local, loginUrl, recoverUrl, requiredFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Register {\n");
    
    sb.append("    local: ").append(toIndentedString(local)).append("\n");
    sb.append("    loginUrl: ").append(toIndentedString(loginUrl)).append("\n");
    sb.append("    recoverUrl: ").append(toIndentedString(recoverUrl)).append("\n");
    sb.append("    requiredFields: ").append(toIndentedString(requiredFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

