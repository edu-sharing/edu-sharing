/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.RemoteAuthDescription;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Login
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-20T14:32:44.166+01:00")
public class Login {
  @SerializedName("remoteAuthentications")
  private Map<String, RemoteAuthDescription> remoteAuthentications = null;

  @SerializedName("isValidLogin")
  private Boolean isValidLogin = false;

  @SerializedName("isAdmin")
  private Boolean isAdmin = false;

  @SerializedName("currentScope")
  private String currentScope = null;

  @SerializedName("userHome")
  private String userHome = null;

  @SerializedName("sessionTimeout")
  private Integer sessionTimeout = null;

  @SerializedName("toolPermissions")
  private List<String> toolPermissions = null;

  @SerializedName("statusCode")
  private String statusCode = null;

  @SerializedName("authorityName")
  private String authorityName = null;

  @SerializedName("isGuest")
  private Boolean isGuest = false;

   /**
   * Get remoteAuthentications
   * @return remoteAuthentications
  **/
  @ApiModelProperty(value = "")
  public Map<String, RemoteAuthDescription> getRemoteAuthentications() {
    return remoteAuthentications;
  }

  public Login isValidLogin(Boolean isValidLogin) {
    this.isValidLogin = isValidLogin;
    return this;
  }

   /**
   * Get isValidLogin
   * @return isValidLogin
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsValidLogin() {
    return isValidLogin;
  }

  public void setIsValidLogin(Boolean isValidLogin) {
    this.isValidLogin = isValidLogin;
  }

  public Login isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

   /**
   * Get isAdmin
   * @return isAdmin
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }

  public Login currentScope(String currentScope) {
    this.currentScope = currentScope;
    return this;
  }

   /**
   * Get currentScope
   * @return currentScope
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrentScope() {
    return currentScope;
  }

  public void setCurrentScope(String currentScope) {
    this.currentScope = currentScope;
  }

   /**
   * Get userHome
   * @return userHome
  **/
  @ApiModelProperty(value = "")
  public String getUserHome() {
    return userHome;
  }

  public Login sessionTimeout(Integer sessionTimeout) {
    this.sessionTimeout = sessionTimeout;
    return this;
  }

   /**
   * Get sessionTimeout
   * @return sessionTimeout
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getSessionTimeout() {
    return sessionTimeout;
  }

  public void setSessionTimeout(Integer sessionTimeout) {
    this.sessionTimeout = sessionTimeout;
  }

  public Login toolPermissions(List<String> toolPermissions) {
    this.toolPermissions = toolPermissions;
    return this;
  }

  public Login addToolPermissionsItem(String toolPermissionsItem) {
    if (this.toolPermissions == null) {
      this.toolPermissions = new ArrayList<String>();
    }
    this.toolPermissions.add(toolPermissionsItem);
    return this;
  }

   /**
   * Get toolPermissions
   * @return toolPermissions
  **/
  @ApiModelProperty(value = "")
  public List<String> getToolPermissions() {
    return toolPermissions;
  }

  public void setToolPermissions(List<String> toolPermissions) {
    this.toolPermissions = toolPermissions;
  }

   /**
   * Get statusCode
   * @return statusCode
  **/
  @ApiModelProperty(value = "")
  public String getStatusCode() {
    return statusCode;
  }

  public Login authorityName(String authorityName) {
    this.authorityName = authorityName;
    return this;
  }

   /**
   * Get authorityName
   * @return authorityName
  **/
  @ApiModelProperty(value = "")
  public String getAuthorityName() {
    return authorityName;
  }

  public void setAuthorityName(String authorityName) {
    this.authorityName = authorityName;
  }

  public Login isGuest(Boolean isGuest) {
    this.isGuest = isGuest;
    return this;
  }

   /**
   * Get isGuest
   * @return isGuest
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsGuest() {
    return isGuest;
  }

  public void setIsGuest(Boolean isGuest) {
    this.isGuest = isGuest;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Login login = (Login) o;
    return Objects.equals(this.remoteAuthentications, login.remoteAuthentications) &&
        Objects.equals(this.isValidLogin, login.isValidLogin) &&
        Objects.equals(this.isAdmin, login.isAdmin) &&
        Objects.equals(this.currentScope, login.currentScope) &&
        Objects.equals(this.userHome, login.userHome) &&
        Objects.equals(this.sessionTimeout, login.sessionTimeout) &&
        Objects.equals(this.toolPermissions, login.toolPermissions) &&
        Objects.equals(this.statusCode, login.statusCode) &&
        Objects.equals(this.authorityName, login.authorityName) &&
        Objects.equals(this.isGuest, login.isGuest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remoteAuthentications, isValidLogin, isAdmin, currentScope, userHome, sessionTimeout, toolPermissions, statusCode, authorityName, isGuest);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Login {\n");
    
    sb.append("    remoteAuthentications: ").append(toIndentedString(remoteAuthentications)).append("\n");
    sb.append("    isValidLogin: ").append(toIndentedString(isValidLogin)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    currentScope: ").append(toIndentedString(currentScope)).append("\n");
    sb.append("    userHome: ").append(toIndentedString(userHome)).append("\n");
    sb.append("    sessionTimeout: ").append(toIndentedString(sessionTimeout)).append("\n");
    sb.append("    toolPermissions: ").append(toIndentedString(toolPermissions)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    authorityName: ").append(toIndentedString(authorityName)).append("\n");
    sb.append("    isGuest: ").append(toIndentedString(isGuest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

